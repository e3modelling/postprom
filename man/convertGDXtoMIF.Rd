% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convertGDXtoMIF.R
\name{convertGDXtoMIF}
\alias{convertGDXtoMIF}
\title{Convert GDX Files to MIF Format}
\usage{
convertGDXtoMIF(
  .path,
  mif_name,
  regions = NULL,
  years = NULL,
  fullValidation = TRUE,
  scenario_name = NULL,
  aggregate = TRUE,
  emissions = TRUE,
  save = TRUE
)
}
\arguments{
\item{.path}{A character vector specifying the path(s) to the GDX files.}

\item{mif_name}{A string specifying the name of the MIF file to create.}

\item{regions}{Optional; a character vector specifying the regions to include. Defaults to `NULL`, in which case regions are read from the GDX file.}

\item{fullValidation}{Optional; a logical value indicating whether full validation should be performed. Defaults to `TRUE`.}

\item{scenario_name}{Optional; a character vector specifying the scenario names. Defaults to the basename of `.path`.}

\item{aggregate}{Optional; a logical value indicating whether to aggregate data. Defaults to `TRUE`.}

\item{emissions}{Optional; a logical value indicating whether to generate a separate emissions csv file for running climate assessment. Defaults to `TRUE`.}

\item{save}{Optional; a logical value indicating whether to save the output. Defaults to `TRUE`.}
}
\value{
A list of scenario reports generated from the provided GDX files.
}
\description{
This function processes GDX files and converts them to MIF format, with options for validation, aggregation, and saving the output.
}
\details{
- If `regions` is not provided, it is inferred from the GDX file using the `readGDX` function.
- The function supports multiple paths and scenarios, and appends reports when more than one path is provided.
- Full validation is optionally applied by calling `appendValidationMIF`.
}
\examples{
\dontrun{
convertGDXtoMIF(.path = c("path/to/gdx1", "path/to/gdx2"),
                mif_name = "output.mif",
                regions = c("runCYL", "World"),
                fullValidation = TRUE,
                scenario_name = c("Scenario1", "Scenario2"),
                aggregate = TRUE,
                emissions = TRUE,
                save = TRUE)
}
}
